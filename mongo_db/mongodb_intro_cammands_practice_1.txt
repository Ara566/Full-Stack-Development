show dbs

admin    40.00 KiB
collage  56.00 KiB
config   72.00 KiB
local    80.00 KiB
mydb     40.00 KiB

use collage

switched to db collage
db
collage
db.students.find().pretty()
db.students.insert([{sid:520,sname:"aravind Kumar",sphone:9390215759,smarks:95},{sid:521,sname:"susu",sphone:8564773420,smarks:86}])
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('65bc92a5df5eb12853b67d91'),
    '1': ObjectId('65bc92a5df5eb12853b67d92')
  }
}
db.students.insert([{sid:522,sname:"idress",sphone:9546785759,smarks:89},{sid:523,sname:"shivudu",sphone:9673453420,smarks:66}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('65bc92eedf5eb12853b67d93'),
    '1': ObjectId('65bc92eedf5eb12853b67d94')
  }
}
db.students.find().pretty()
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d93'),
  sid: 522,
  sname: 'idress',
  sphone: 9546785759,
  smarks: 89
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 66
}
help
Shell Help
use	Set current database
show	'show databases'/'show dbs': Print a list of all available databases. 'show collections'/'show tables': Print a list of all collections for current database. 'show profile': Prints system.profile information. 'show users': Print a list of all users for current database. 'show roles': Print a list of all roles for current database. 'show log <type>': log for current connection, if type is not set uses 'global' 'show logs': Print all logs.
exit	Quit the MongoDB shell with exit/exit()/.exit
quit	Quit the MongoDB shell with quit/quit()
Mongo	Create a new connection and return the Mongo object. Usage: new Mongo(URI, options [optional])
connect	Create a new connection and return the Database object. Usage: connect(URI, username [optional], password [optional])
it	result of the last line evaluated; use to further iterate
version	Shell version
load	Loads and runs a JavaScript file into the current shell environment
enableTelemetry	Enables collection of anonymous usage data to improve the mongosh CLI
disableTelemetry	Disables collection of anonymous usage data to improve the mongosh CLI
passwordPrompt	Prompts the user for a password
sleep	Sleep for the specified number of milliseconds
print	Prints the contents of an object to the output
printjson	Alias for print()
convertShardKeyToHashed	Returns the hashed value for the input using the same hashing function as a hashed index.
cls	Clears the screen like console.clear()
isInteractive	Returns whether the shell will enter or has entered interactive mode
For more information on usage: https://docs.mongodb.com/manual/reference/method
db.students.findOne()
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
db.students.findOne({sid:521})
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
db.students.findOne({sid:{$gt:523}})
null
db.students.findOne({sid:{$gt:522}})
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 66
}
db.students.findOne({sid:{$lg:521}})
MongoServerError: unknown operator: $lg
db.students.findOne({sname:{'$regex':'ara','$options':'i'}},{})
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
db.students.find({sname:{'$regex':'(\s+kumar|^kumar)','$options':'i'}},{})
db.students.find({sname:{'$regex':'(\s+ind|^ind)','$options':'i'}},{})
db.students.find({sname:{'$regex':'(\s+Kumar|^Kumar)','$options':'i'}},{})
var cursor= db.students.find()
cursor.next()
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
cursor.next()
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
cursor.next()
{
  _id: ObjectId('65bc92eedf5eb12853b67d93'),
  sid: 522,
  sname: 'idress',
  sphone: 9546785759,
  smarks: 89
}
cursor.next()
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 56
}
cursor.next()
null
var cursor= db.students.find()
cursor.forEach(printjson)
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d93'),
  sid: 522,
  sname: 'idress',
  sphone: 9546785759,
  smarks: 89
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 56
}
var cursor= db.students.find()
;
cursor.sort()
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d93'),
  sid: 522,
  sname: 'idress',
  sphone: 9546785759,
  smarks: 89
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 56
}
cursor.sort(-1)
MongoCursorInUseError: Cursor is already initialized
var cursor= db.students.find()
cursor.sort(-1)
MongoInvalidArgumentError: Invalid sort format: -1 Sort must be a valid object
db.students.find().sort(sname:1)
SyntaxError: Unexpected token, expected "," (1:29)

> 1 | db.students.find().sort(sname:1)
    |                              ^
db.students.find().sort({sname:1})
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d93'),
  sid: 522,
  sname: 'idress',
  sphone: 9546785759,
  smarks: 89
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 56
}
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
db.students.find().sort({sname:-})
SyntaxError: Unexpected token (1:32)

> 1 | db.students.find().sort({sname:-})
    |                                 ^
db.students.find().sort({sname:-1})
{
  _id: ObjectId('65bc92a5df5eb12853b67d92'),
  sid: 521,
  sname: 'susu',
  sphone: 8564773420,
  smarks: 86
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d94'),
  sid: 523,
  sname: 'shivudu',
  sphone: 9673453420,
  smarks: 56
}
{
  _id: ObjectId('65bc92eedf5eb12853b67d93'),
  sid: 522,
  sname: 'idress',
  sphone: 9546785759,
  smarks: 89
}
{
  _id: ObjectId('65bc92a5df5eb12853b67d91'),
  sid: 520,
  sname: 'aravind Kumar',
  sphone: 9390215759,
  smarks: 95
}
a.txt
ReferenceError: a is not defined